type Category {
  id: String!
  name: String!
  image: String
}

type Product {
  id: ID!
  name: String!
  image: String!
  description: String!
  price: Float!
  createdAt: String!
  categoryId: Int!
}

input CreateProductDTO {
  name: String!
  price: Float!
  description: String!
  image: String!
  categoryId: Int!
}

input UpdateProductDTO {
  id: ID!
  name: String
  price: Float
  description: String
  image: String
  categoryId: Int
}

type Query {
  products: [Product!]!
  product(id: Int!): Product
  categories: [Category!]!
}

input LoginDto {
  email: String!
  password: String!
}

input CategoryDTO {
  name: String!
  image: String
}

type Mutation {
  createProduct(product: CreateProductDTO!): Product
  updateProduct(product: UpdateProductDTO!): Product
  deleteProduct(id: Int!): Int
  login(user: LoginDto): AuthResponse
  createCategory(category: CategoryDTO): Category
}

type User {
  id: Int!
  email: String!
}

type AuthResponse {
  user: User
  tokenSession: String
}
